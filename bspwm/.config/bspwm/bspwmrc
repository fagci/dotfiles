#!/bin/sh

# start hotkeys daemon
pgrep -x sxhkd > /dev/null || sxhkd &

#clenup rules if reloaded
bspc rule -r "*"

# bspc config remove_disabled_monitors true
# bspc config remove_unplugged_monitors true

# We look for a non-laptop monitor to use for default, but use the laptop
# screen (LVDS) if there's nothing else. This is because I assume that if you
# have an extra screen attached to a laptop, you want to use that.
mainmonitor="$(bspc query --monitors --names | grep -v LVDS | head -n 1)"

if ! echo "$mainmonitor" | grep LVDS >/dev/null 2>&1; then
	xrandr --output "$mainmonitor" --auto --output LVDS1 --off
fi

# Start workspaces on the main monitor.
bspc monitor "$mainmonitor" -d 1 2 3 4 5
# bspc desktop -f 1

bspc config border_width         1
bspc config window_gap           5

bspc config split_ratio          0.5
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config single_monocle       true

# TODO: make focus revert from dismissed app (flameshot)

bspc rule -a Gimp state=floating follow=on
# bspc rule -a Chromium desktop='^1'
bspc rule -a TelegramDesktop desktop='^5'
bspc rule -a Kotatogram desktop='^5'
bspc rule -a mplayer2 state=floating
bspc rule -a pulseaudio state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
bspc rule -a Alacritty:bc state=floating

# other programs startup

killall -q polybar

xset r rate 300 25
kbdrate -r 9 -d 300
pgrep -x nitrogen || nitrogen --restore
setxkbmap -model pc105 -layout us,ru -option grp:alt_shift_toggle
xrandr --output LVDS1 --off
synclient VertEdgeScroll=1 TapButton1=1 TapButton2=1 TapButton3=1

pgrep -x picom > /dev/null || picom -b --experimental-backends 
"$HOME/.config/i3/polybar.sh" &
pgrep -x unclutter > /dev/null || unclutter &
pgrep -x dunst > /dev/null || dunst &
pgrep -x redshift > /dev/null || redshift &

# pgrep -x kotatogram-desktop > /dev/null || kotatogram-desktop &

# vim: set ft=sh:
